name: Deploy to OKE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build & push Docker image
        with:
          image: idwgixatfchl/cards-dev-pci/oci-streaming/oci-streaming
          tags: v1, latest
          registry: iad.ocir.io
          dockerfile: Dockerfile
          username: ${{ secrets.OCIR_USER }}
          password: ${{ secrets.OCIR_PWD }}

      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.2
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: Tag and push a container image
        id: tag-and-push-image
        run: |
          docker build --tag=oci-streaming:latest .
          docker tag "oci-streaming:latest" sjc.ocir.io/axwgkpue2ufo/ocilabs/streaming:latest
          docker push sjc.ocir.io/axwgkpue2ufo/ocilabs/streaming:latest

      - name: Create Bastion Session
        run: |
          # Create a new bastion session
          session_id=$(oci --region ${REGION} compute bastion create-session --instance-id ${INSTANCE_ID} --authorized-key-file id_rsa.pub --fingerprint ${FINGERPRINT} --query 'data.id' --output text)
  
          # Wait for the session to become active
          while true; do
            status=$(oci --region ${REGION} compute bastion get-session --session-id ${session_id} --query 'data."session-state"' --output text)
            if [ "$status" = "ACTIVE" ]; then
              break
            fi
            sleep 5
          done
  
          # Get the session's connection string
          connection_string=$(oci --region ${REGION} compute bastion get-session-connection-string --session-id ${session_id} --query 'data."connection-string"' --output text)
  
          # Connect to the bastion host
          ssh -o "StrictHostKeyChecking no" -i id_rsa ${connection_string}

      - name: Deploy to OKE
        run: |
          kubectl --kubeconfig=${KUBECONFIG} apply -f ${DEPLOYMENT_FILE}
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
          DEPLOYMENT_FILE: path/to/deployment.yaml

      - name: Delete Bastion Session
        run: |
          # Delete the bastion session
          oci --region ${REGION} compute bastion delete-session --session-id ${session_id}
        env:
          session_id: ${{ steps.Create_Bastion_Session.outputs.session_id }}
